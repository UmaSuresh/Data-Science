getwd()
list.files()
names(pf)
names(test1)
qplot(x=dob_day,data=pf)
ggplot(test1)
install.packages('ggplot2')
library(ggplot2)
qplot(x=test1$V1,data=test1)
test2 <- read.csv("~/R-Software/test2.csv", header=FALSE)
View(test2)
qplot(x=test2$V1,data=test2)
qplot(x=test2$V1,data=test2$V2)
qplot(x=test2$V2,data=test2)
qplot(x=test2$V2,data=test2&V1)
qplot(x=test2$V2,data=test2$V1)
qplot(x=test2$V2,data=test2$V2)
qplot(x=test2)
qplot(x=test2$V2,data=test2)
ggplot(x=dob_day,data=pf)
install.packages(ggplot2)
install.packages("ggplot2")
load("~/R-Software/.RData")
pseudo_facebook <- read.delim("~/R-Software/pseudo_facebook.tsv")
View(pseudo_facebook)
pf<-read.csv(pseudo_facebook.csv)
pf<-read.csv(pseudo_facebook)
pf<-read.tsv(pseudo_facebook.tsv)
View(pseudo_facebook)
pf<-read.tsv(pseudo_facebook)
pf<-read.csv(pseudo_facebook)
ggplot(x=test2$V1,y=test2$V2)
help.search("geom_point")
ggplot(0)
pf<-read.csv('pseudo_facebook.tsv',sep='/')
ggetwd()
?ggplot
ggplot()
install.packages('ggplot2')
install.packages("ggplot2")
pkgs <- c('reshape2', 'plyr', 'ggplot2', 'dplyr', 'data-table', 'lahman')
install.packages(pkgs)
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
head(pew)
tb <- read.csv(
file = "http://stat405.had.co.nz/data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
head(tb)
View(pew)
View(tb)
library(reshape2)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "frequency"
)
View(pew_tidy)
View(pew)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "uency"
)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "frequency"
)
tb <- read.csv(
file = "data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
pew <- read.delim(
file = "data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
View(pseudo_facebook)
View(lm_eqn)
View(dat)
View(mydata)
setwd("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/")
getwd()
list.files()
## list of packages
library(ggplot2)
library(dplyr)
library(reshape2)
library(data.table)getwd()
PVP2015 <-  read.delim("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP2015.csv")
View(PVP2015)
View(PVP2015)
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP2015.csv", sep = '\t')
View(PVP2015)
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP2015.csv", sep = '\t')
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP2015.csv")
View(PVP2015)
setwd("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Capstone Project")
getwd()
list.files()
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP2015.csv")
View(test1)
View(test2)
View(test1)
PVP <- read.csv("~/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP.csv", sep="")
View(PVP)
View(PVP)
View(test)
View(test1)
PVP <- read.csv("~/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP.csv", na.strings="")
View(PVP)
View(PVP)
PVP1 <- read.csv("~/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP1.csv")
View(PVP1)
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP1.csv")
View(PVP2015)
View(PVP2015)
dat<-data.frame(x=x,y=y)
attach(dat)
plot(x,y)
abline(lm(y ~ x))
PVP2015<-data.frame(x=x,y=y)
View(PVP2015)
PVP2015 <- data.frame(x=YS,y=J0.08)
attach(PVP2015)
plot(x,y)
abline(lm(y ~ x))
PVP <- data.frame(x=PVP2015$YS,y=PVP2015$J0.08)
attach(PVP2015)
plot(x,y)
abline(lm(y ~ x))
PVP <- data.frame(x = PVP2015$YS , y = PVP2015$J0.08)
PVP <- data.frame(x = PVP2015$YS , y = PVP2015$J0.08)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
lm_eqn <- function(PVP){
m <- lm(y ~ x, PVP);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p <- ggplot(data = PVP2015, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
lm_eqn <- function(PVP){
m <- lm(y ~ x, PVP);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
lm_eqn <- function(PVP){
m <- lm(y ~ x, PVP);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(PVP), parse = TRUE)
p <- ggplot(data = PVP2015, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
PVP <- data.frame(x = PVP2015$YS , y = PVP2015$J0.08)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
## equation of line
p <- ggplot(data = PVP2015, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
setwd("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Capstone Project")
getwd()
list.files()
## list of packages
library(ggplot2)
library(dplyr)
library(reshape2)
PVP2015 <-  read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/PVP1.csv")
View(PVP2015)
## fit a line using R
PVP <- data.frame(x = PVP2015$YS , y = PVP2015$J0.08)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
PVP <- data.frame(x = PVP2015$J0.08 , y = PVP2015$YS)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
PVP <- data.frame(x = PVP2015$J0.08 , y = PVP2015$YS)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
## equation of line
p <- ggplot(data = PVP2015, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
PVP <- data.frame(x = PVP2015$J0.08 , y = PVP2015$YS)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
## equation of line
p <- ggplot(data = PVP2015, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
lm_eqn <- function(PVP){
m <- lm(y ~ x, PVP);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(PVP), parse = TRUE)
p <- ggplot(data = PVP, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
lm_eqn <- function(PVP){
m <- lm(y ~ x, PVP);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(PVP), parse = TRUE)
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(PVP), parse = TRUE)
line(lowess(x,y))
coef(PVP2015)
coef(PVP)
coef(PVP.lm)
coef(lm(Y~x))
coef(lm(y~x))
PVP <- data.frame(x = PVP2015$J0.08 , y = PVP2015$YS)
attach(PVP)
plot(x,y)
abline(lm(y ~ x))
coef(lm(y~x))
setwd("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/")
getwd()
titanic.train <- read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/train.csv")
titanic.test <- read.csv("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/test.csv")
str(titanic.train)
str(titanic.test)
table(titanic.train$Survived)
prop.table(table(titanic.train$Survived))
plot(density(titanic.train$Age, na.rm=TRUE))
plot(density(titanic.train$Fare, na.rm=TRUE))
plot(prop.table(table(titanic.train$Ticket, titanic.train$Survived))[,1])
plot(prop.table(table(titanic.train$Ticket, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Age, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Pclass, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Sex, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Age, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$SibSp, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Parch, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Ticket, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Fare, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Cabin, titanic.train$Survived))[,2])
plot(prop.table(table(titanic.train$Embarked, titanic.train$Survived))[,2])
ggplot(aes(y=Cabin, x=Survived), data = titanic.train) +
geom_point()
titanic.train$CabinCha <- substr(titanic.train$Cabin, 1,1)
titanic.test$CabinCha <- substr(titanic.test$Cabin, 1,1)
titanic.train$CabinNum <-gsub("[[:alpha:]]","",titanic.train$Cabin)
titanic.test$CabinNum <-gsub("[[:alpha:]]","",titanic.test$Cabin)
titanic.train$Name <- as.character(titanic.train$Name)
title <- sapply(titanic.train$Name, FUN=function(x) {strsplit(x, '[,.]')[[1]][2]})
names(title) <- NULL
titanic.train$Title <- title
titanic.test$Name <- as.character(titanic.test$Name)
title.test <- sapply(titanic.test$Name, FUN=function(x) {strsplit(x, '[,.]')[[1]][2]})
names(title.test) <- NULL
titanic.test$Title <- title.test
# all variables PassengerId + Survived + Pclass + Name + Sex + Age + SibSp + Parch + Ticket + Fare + Cabin + Embarked
library(rpart)
library(rpart.plot)
#with Ticket
#titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch +Ticket + Fare + Embarked, data = titanic.train, method = 'class')
titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'class')
prp(titanic.CART)
titanic.CART.Predict <- predict(titanic.CART, newdata = titanic.train, type = 'class')
#titanic.test.CART.Predict <- predict(titanic.CART, newdata = titanic.test, type = 'class')
#install.packages('rattle')
#library(rattle)
fancyRpartPlot(titanic.CART)
table(titanic.train$Survived, titanic.CART.Predict)
install.packages('ggplot2')
library(caret)
library(e1071)
fitControl <- trainControl(method = 'cv', number =10 )
cartGrid <- expand.grid(.cp=(1:50)*0.001)
train(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'rpart', trControl = fitControl, tuneGrid = cartGrid)
titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'class', control = rpart.control(cp=0.003))
titanic.CART.Predict <- predict(titanic.CART, newdata = titanic.train, type = 'class')
table(titanic.train$Survived, titanic.CART.Predict)
titanic.test.CART.Predict <- predict(titanic.CART, newdata = titanic.test, type = 'class')
titanic.submit<- data.frame(PassengerId=titanic.test$PassengerId, Survived=titanic.test.CART.Predict)
str(titanic.submit)
write.csv(titanic.submit, file='genderclassmodel.csv', row.names = FALSE)
install.packages("ggplot2")
install.packages("ggplot2")
require(ggplot2)
ggplot(aes(y=Cabin, x=Survived), data = titanic.train) +
geom_point()
titanic.train$CabinCha <- substr(titanic.train$Cabin, 1,1)
titanic.test$CabinCha <- substr(titanic.test$Cabin, 1,1)
titanic.train$CabinNum <-gsub("[[:alpha:]]","",titanic.train$Cabin)
titanic.test$CabinNum <-gsub("[[:alpha:]]","",titanic.test$Cabin)
titanic.train$Name <- as.character(titanic.train$Name)
title <- sapply(titanic.train$Name, FUN=function(x) {strsplit(x, '[,.]')[[1]][2]})
names(title) <- NULL
titanic.train$Title <- title
titanic.test$Name <- as.character(titanic.test$Name)
title.test <- sapply(titanic.test$Name, FUN=function(x) {strsplit(x, '[,.]')[[1]][2]})
names(title.test) <- NULL
titanic.test$Title <- title.test
library(rpart)
library(rpart.plot)
#with Ticket
#titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch +Ticket + Fare + Embarked, data = titanic.train, method = 'class')
titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'class')
prp(titanic.CART)
titanic.CART.Predict <- predict(titanic.CART, newdata = titanic.train, type = 'class')
#titanic.test.CART.Predict <- predict(titanic.CART, newdata = titanic.test, type = 'class')
#install.packages('rattle')
#library(rattle)
fancyRpartPlot(titanic.CART)
install.packages('rattle')
library(rattle)
fancyRpartPlot(titanic.CART)
?fancyRpartPlot
library(rpart)
install.packages('rpart')
install.packages("rpart")
fancyRpartPlot(titanic.CART)
install.packages('rattle')
library(rattle)
install.packages("rattle")
require(rattle)
fancyRpartPlot(titanic.CART)
fancyRpartPlot(titanic.CART)
table(titanic.train$Survived, titanic.CART.Predict)
install.packages('ggplot2')
library(caret)
library(e1071)
fitControl <- trainControl(method = 'cv', number =10 )
cartGrid <- expand.grid(.cp=(1:50)*0.001)
train(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'rpart', trControl = fitControl, tuneGrid = cartGrid)
titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'class', control = rpart.control(cp=0.003))
titanic.CART.Predict <- predict(titanic.CART, newdata = titanic.train, type = 'class')
table(titanic.train$Survived, titanic.CART.Predict)
titanic.test.CART.Predict <- predict(titanic.CART, newdata = titanic.test, type = 'class')
titanic.submit<- data.frame(PassengerId=titanic.test$PassengerId, Survived=titanic.test.CART.Predict)
str(titanic.submit)
write.csv(titanic.submit, file='genderclassmodel.csv', row.names = FALSE)
install.packages("ggplot2")
library(caret)
library(e1071)
fitControl <- trainControl(method = 'cv', number =10 )
cartGrid <- expand.grid(.cp=(1:50)*0.001)
train(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'rpart', trControl = fitControl, tuneGrid = cartGrid)
titanic.CART <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = titanic.train, method = 'class', control = rpart.control(cp=0.003))
titanic.CART.Predict <- predict(titanic.CART, newdata = titanic.train, type = 'class')
table(titanic.train$Survived, titanic.CART.Predict)
titanic.test.CART.Predict <- predict(titanic.CART, newdata = titanic.test, type = 'class')
titanic.submit<- data.frame(PassengerId=titanic.test$PassengerId, Survived=titanic.test.CART.Predict)
str(titanic.submit)
write.csv(titanic.submit, file='genderclassmodel.csv', row.names = FALSE)
View(PVP2015)
View(PVP2015)
View(cartGrid)
framingham <- read.csv("~/R-Software/Dive into EDA -Project files/Data-Science/Data/framingham.csv")
View(framingham)
setwd("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/")
getwd()
list.files()
## list of packages
library(ggplot2)
library(dplyr)
library(reshape2)
library(data.table)
pseudo_facebook <-  read.delim("C:/Users/usureshkumar/Documents/R-Software/Dive into EDA -Project files/Data-Science/Data/pseudo_facebook.tsv")
View(pseudo_facebook)
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
names(pf)
## Third Qualitative variable
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y =mean , geom = 'point' , shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender),  stat = 'summary' , fun.y =median )
## chain function together %.%
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n= n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
## Plotting Conditional Summaries
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender ,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
## Ratio Plot Solution
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3 , linetype = 2)
## Cut a variable
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
table(pf$year_joined)
?cut
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
## Plotting it All Together
table(pf$year_joined.bucket , useNA = 'ifany')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),  stat = 'summary' , fun.y =median )
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_bar(aes(color = gender),  stat = 'summary' , fun.y =median )
pf$ages.bucket <- cut(pf$age, breaks = c(18,29,50,64,100))
table(pf$ages.bucket ,useNA = 'ifany')
ggplot(aes(x = age, y = friend_count),
data =subset(pf, !is.na(ages.bucket))) +
geom_histogram(aes(color = ages.bucket),  stat = 'summary' , fun.y =median)
ggplot(aes(x = ages.bucket , y = friend_count),
data =subset(pf, !is.na(ages.bucket))) +
geom_histogram(aes(color = ages.bucket),  stat = 'summary' ,fun.y =median)
ggplot(aes(x = ages.bucket , y = friend_count),
data =subset(pf, !is.na(pf$ages.bucket))) +
geom_histogram(aes(color = ages.bucket),  stat = 'summary' ,fill = 'darkblue' ,  fun.y =median)
